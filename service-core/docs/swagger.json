{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for My Project.",
        "title": "My Project API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/dnd": {
            "get": {
                "description": "Get all DND entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DND"
                ],
                "summary": "Get all DND entries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DND"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new DND entry with phone number, reason, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DND"
                ],
                "summary": "Create a new DND entry",
                "parameters": [
                    {
                        "description": "DND details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.DND"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/dnd/{id}": {
            "get": {
                "description": "Get details of a DND entry by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DND"
                ],
                "summary": "Get DND details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DND ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DND"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a DND entry by ID with optional fields: phone number, reason, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DND"
                ],
                "summary": "Update an existing DND entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DND ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DND details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DND"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a DND entry by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DND"
                ],
                "summary": "Delete an existing DND entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DND ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login with username and password to get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user with username, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created user",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaign-recipient": {
            "post": {
                "description": "Create a new campaign recipient with campaign ID, recipient ID, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Recipients"
                ],
                "summary": "Create a new campaign recipient",
                "parameters": [
                    {
                        "description": "Campaign recipient details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignRecipient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-recipient/{id}": {
            "put": {
                "description": "Update a campaign recipient by ID with optional fields: campaign ID, recipient ID, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Recipients"
                ],
                "summary": "Update an existing campaign recipient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Recipient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign recipient details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignRecipient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a campaign recipient by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Recipients"
                ],
                "summary": "Delete an existing campaign recipient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Recipient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-recipients": {
            "get": {
                "description": "Get all campaign recipients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Recipients"
                ],
                "summary": "Get all campaign recipients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CampaignRecipient"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-recipients/{id}": {
            "get": {
                "description": "Get details of a campaign recipient by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Recipients"
                ],
                "summary": "Get campaign recipient details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Recipient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignRecipient"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow": {
            "post": {
                "description": "Create a new campaign workflow with name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflows"
                ],
                "summary": "Create a new campaign workflow",
                "parameters": [
                    {
                        "description": "Campaign workflow details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow-processing": {
            "post": {
                "description": "Create a new processing association between a campaign and a workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Processings"
                ],
                "summary": "Create a new processing association between a campaign and a workflow",
                "parameters": [
                    {
                        "description": "Campaign workflow processing details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflowProcessing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow-processing/{id}": {
            "put": {
                "description": "Update a processing association between a campaign and a workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Processings"
                ],
                "summary": "Update an existing processing association between a campaign and a workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow Processing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign workflow processing details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflowProcessing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a processing association between a campaign and a workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Processings"
                ],
                "summary": "Delete an existing processing association between a campaign and a workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow Processing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow-processings/{id}": {
            "get": {
                "description": "Get details of a processing association between a campaign and a workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Processings"
                ],
                "summary": "Get campaign workflow processing details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow Processing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflowProcessing"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow-user": {
            "post": {
                "description": "Create a new user associated with a campaign workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Users"
                ],
                "summary": "Create a new user associated with a campaign workflow",
                "parameters": [
                    {
                        "description": "Campaign workflow user details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflowUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow-user/{id}": {
            "put": {
                "description": "Update a user associated with a campaign workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Users"
                ],
                "summary": "Update an existing user associated with a campaign workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign workflow user details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflowUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user associated with a campaign workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Users"
                ],
                "summary": "Delete an existing user associated with a campaign workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow-users/{id}": {
            "get": {
                "description": "Get details of a user associated with a campaign workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflow Users"
                ],
                "summary": "Get campaign workflow user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflowUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflow/{id}": {
            "put": {
                "description": "Update a campaign workflow by ID with optional fields: name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflows"
                ],
                "summary": "Update an existing campaign workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign workflow details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a campaign workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflows"
                ],
                "summary": "Delete an existing campaign workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflows": {
            "get": {
                "description": "Get all campaign workflows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflows"
                ],
                "summary": "Get all campaign workflows",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CampaignWorkflow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/campaign-workflows/{id}": {
            "get": {
                "description": "Get details of a campaign workflow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign Workflows"
                ],
                "summary": "Get campaign workflow details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Workflow ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignWorkflow"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mno": {
            "post": {
                "description": "Create a new MNO with name, prefix, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNO"
                ],
                "summary": "Create a new Mobile Network Operator",
                "parameters": [
                    {
                        "description": "MNO details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.MNO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mno-channels": {
            "post": {
                "description": "Create a new channel for an MNO with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNO Channels"
                ],
                "summary": "Create a new MNO channel",
                "parameters": [
                    {
                        "description": "MNO channel details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.MnoChannels"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mno-channels/{id}": {
            "put": {
                "description": "Update an existing MNO channel with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNO Channels"
                ],
                "summary": "Update an existing MNO channel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MNO Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MNO channel details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MnoChannels"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an MNO channel by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNO Channels"
                ],
                "summary": "Delete an MNO channel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MNO Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mno/{id}": {
            "put": {
                "description": "Update an MNO by ID with optional fields: name, prefix, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNO"
                ],
                "summary": "Update an existing Mobile Network Operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MNO ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MNO details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MNO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an MNO by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNO"
                ],
                "summary": "Delete an existing Mobile Network Operator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MNO ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mnos": {
            "get": {
                "description": "Get all MNOs with their channels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNOs"
                ],
                "summary": "Get all MNOs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MNO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/mnos/{id}": {
            "get": {
                "description": "Get details of an MNO by ID including its channels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MNOs"
                ],
                "summary": "Get MNO details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MNO ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MNO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/msg-priorities": {
            "get": {
                "description": "Get all SMS priority configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SMS Priority"
                ],
                "summary": "Get all SMS priority configurations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MsgPriority"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/msg-priorities/{id}": {
            "get": {
                "description": "Get details of an SMS priority configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SMS Priority"
                ],
                "summary": "Get SMS priority details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SMS Priority ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MsgPriority"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/msg-priority": {
            "post": {
                "description": "Create a new SMS priority configuration with message type, priority level, and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SMS Priority"
                ],
                "summary": "Create a new SMS priority configuration",
                "parameters": [
                    {
                        "description": "SMS priority details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.MsgPriority"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/msg-priority/{id}": {
            "put": {
                "description": "Update an SMS priority configuration by ID with optional fields: message type, priority level, and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SMS Priority"
                ],
                "summary": "Update an existing SMS priority configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SMS Priority ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SMS priority details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MsgPriority"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an SMS priority configuration by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SMS Priority"
                ],
                "summary": "Delete an existing SMS priority configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SMS Priority ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Campaign": {
            "description": "Represents an SMS campaign associated with a user",
            "type": "object",
            "properties": {
                "campaign_name": {
                    "description": "Campaign_Name is the name of the campaign",
                    "type": "string"
                },
                "campaign_recipients": {
                    "description": "CampaignRecipients represents the recipients associated with this campaign",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignRecipient"
                    }
                },
                "campaign_workflow_processings": {
                    "description": "CampaignWorkflowProcessings represents the workflows associated with this campaign",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignWorkflowProcessing"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "end_date": {
                    "description": "End_Date is the end date of the campaign",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message_body": {
                    "description": "Message_Body is the body of the SMS message for the campaign",
                    "type": "string"
                },
                "start_date": {
                    "description": "Start_Date is the start date of the campaign",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates the status of the campaign (e.g., Active, Inactive)",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID is the ID of the user who created the campaign",
                    "type": "integer"
                }
            }
        },
        "models.CampaignRecipient": {
            "description": "Represents a recipient of a campaign and their delivery status",
            "type": "object",
            "properties": {
                "campaign": {
                    "description": "Campaign represents the campaign associated with this recipient",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Campaign"
                        }
                    ]
                },
                "campaign_id": {
                    "description": "CampaignID is the ID of the campaign (foreign key)",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "recipient": {
                    "description": "RecipientID is the ID of the recipient (foreign key)",
                    "type": "integer"
                },
                "status": {
                    "description": "Status indicates the delivery status of the campaign to the recipient",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CampaignWorkflow": {
            "description": "Represents a workflow for a campaign",
            "type": "object",
            "properties": {
                "campaign_workflow_processings": {
                    "description": "CampaignWorkflowProcessings represents the campaigns associated with this workflow",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignWorkflowProcessing"
                    }
                },
                "campaign_workflow_users": {
                    "description": "CampaignWorkflowUsers represents the users associated with this workflow",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignWorkflowUser"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the workflow",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CampaignWorkflowProcessing": {
            "description": "Represents the association between a campaign and a workflow",
            "type": "object",
            "properties": {
                "campaign": {
                    "description": "Campaign represents the campaign associated with this workflow",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Campaign"
                        }
                    ]
                },
                "campaign_id": {
                    "description": "CampaignID is the ID of the campaign (foreign key)",
                    "type": "integer"
                },
                "campaign_workflow": {
                    "description": "CampaignWorkflow represents the workflow associated with this campaign",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.CampaignWorkflow"
                        }
                    ]
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workflow_id": {
                    "description": "WorkflowID is the ID of the workflow (foreign key)",
                    "type": "integer"
                }
            }
        },
        "models.CampaignWorkflowUser": {
            "description": "Represents a user associated with a workflow and their status",
            "type": "object",
            "properties": {
                "campaign_workflow": {
                    "description": "CampaignWorkflow represents the workflow associated with this user",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.CampaignWorkflow"
                        }
                    ]
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates whether the user is active or inactive in the workflow",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "User represents the user associated with this workflow",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "UserID is the ID of the user (foreign key)",
                    "type": "integer"
                },
                "workflow_id": {
                    "description": "WorkflowID is the ID of the workflow (foreign key)",
                    "type": "integer"
                }
            }
        },
        "models.DND": {
            "description": "Represents a phone number that should not receive promotional SMS",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone_number": {
                    "description": "Phone_Number is the number that should not receive promotional SMS",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason provides the reason for adding the number to the DND list",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates whether the DND entry is active or inactive",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MNO": {
            "description": "Represents the configuration for an MNO, including prefix, channels, and TPS limits",
            "type": "object",
            "properties": {
                "channels": {
                    "description": "Channels represents the delivery channels associated with the MNO",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MnoChannels"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mno_name": {
                    "description": "MNO_Name is the name of the Mobile Network Operator (e.g., GP, BL, RB)",
                    "type": "string"
                },
                "prefix": {
                    "description": "Prefix is the phone number prefix associated with the MNO (e.g., 017, 019)",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates whether the MNO configuration is active or inactive",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MnoChannels": {
            "description": "Represents a delivery channel (e.g., HTTP, SMPP) for an MNO",
            "type": "object",
            "properties": {
                "channel_id": {
                    "description": "ChannelID is the unique identifier for the channel",
                    "type": "integer"
                },
                "channel_type": {
                    "description": "ChannelType is the type of the channel (HTTP or SMPP)",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mno_id": {
                    "description": "MNOID is the ID of the MNO associated with this channel",
                    "type": "integer"
                },
                "priority": {
                    "description": "Priority is the priority for the SMS type",
                    "type": "integer"
                },
                "status": {
                    "description": "Status indicates whether the channel is active or inactive",
                    "type": "string"
                },
                "tps": {
                    "description": "TPS is the transactions per second limit for the channel",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MsgPriority": {
            "description": "Represents the priority levels for SMS types (e.g., OTP, Transaction, Promotional)",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "description": "Description provides additional details about the priority level",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message_type": {
                    "description": "Message_Type is the type of SMS (e.g., OTP, Transaction, Promotional)",
                    "type": "string"
                },
                "priority_level": {
                    "description": "Priority_Level is the priority level for the SMS type (0 = Highest, 3 = Lowest)",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Permission": {
            "description": "A permission assigned to roles",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Name is the unique name of the permission\n@Property name string true \"Permission Name\" example(\"view_users\")",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "description": "Role assigned to users with permissions",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Name is the unique name of the role\n@Property name string true \"Role Name\" example(\"admin\")",
                    "type": "string"
                },
                "permissions": {
                    "description": "Permissions represents the permissions assigned to the role\n@Property permissions array \"Permissions\" items={Permission} example([{\"id\":1,\"name\":\"view_users\"}])",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Permission"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "description": "Represents a user in the system with roles and campaigns",
            "type": "object",
            "properties": {
                "campaigns": {
                    "description": "Campaigns represents the campaigns associated with the user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Campaign"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "description": "Email is the user's email address",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "roles": {
                    "description": "Roles represents the roles assigned to the user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "description": "Username is a unique identifier for the user",
                    "type": "string"
                }
            }
        },
        "utils.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}